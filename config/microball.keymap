#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        default_ESC {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "parenthesis";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R        &kp T                                            &kp Y        &kp U  &lt 5 I    &kp O    &lt 5 P
&kp A             &kp S         &kp D         &kp F        &kp G        &kp ESC          &kp EQUAL          &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B        &kp TAB          &kp B              &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 6 LANG2  &lt 1 SPACE  &lt 3 LANG1      &mt DEL BACKSPACE  &lt 2 ENTER                             &kp TAB
            >;

            sensor-bindings = <&scroll_up_down>;
            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE  &kp SQT          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CAPS                                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp COLON
&kp TILDE   &kp DOLLAR       &kp PERCENT           &kp AMPERSAND          &kp BACKSLASH  &trans      &parenthesis  &kp AT_SIGN           &kp EXCLAMATION        &kp QUESTION    &kp SLASH         &kp SEMI
&kp GRAVE   &kp EXCLAMATION  &kp DOUBLE_QUOTES     &kp HASH               &trans         &trans      &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN   &kp GREATER_THAN  &kp PIPE
&trans      &trans           &trans                &trans                 &trans         &trans      &trans        &trans                                                                         &trans
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE      &kp N7        &kp N8        &kp N9        &trans                               &kp PLUS   &kp F7  &kp F8  &kp F9  &kp F10
&kp SLASH       &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &trans         &trans  &kp MINUS  &kp F4  &kp F5  &kp F6  &kp F11
&kp LEFT_SHIFT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &kp EQUAL      &trans  &trans     &kp F1  &kp F2  &kp F3  &kp F12
&kp LCTRL       &trans        &kp N0        &trans        &trans        &trans         &trans  &trans                             &kp F13
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &kp LS(END)                        &trans    &kp LS(LG(LEFT_ARROW))  &kp UP      &kp LG(LS(RIGHT))   &trans
&kp LC(A)       &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LS(HOME)  &trans       &trans  &kp HOME  &kp LEFT                &kp DOWN    &kp RIGHT           &kp END
&kp LEFT_SHIFT  &kp LC(X)        &kp LC(C)       &kp LC(V)        &kp LC(B)     &kp TAB      &trans  &trans    &trans                  &kp LG(UP)  &kp LG(DOWN_ARROW)  &kp LC(Z)
&kp LCTRL       &trans           &kp LEFT_ALT    &trans           &trans        &trans       &trans  &trans                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 ESCAPE  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                             &to_layer_0 Y  &to_layer_0 U      &kp LC(C)  &to_layer_0 O       &trans
&to_layer_0 A       &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &to_layer_0 G  &trans      &kp LC(W)      &to_layer_0 H  &mkp_exit_AML MB1  &trans     &mkp_exit_AML MB2   &trans
&kp LEFT_SHIFT      &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &trans      &kp LC(LS(T))  &to_layer_0 N  &to_layer_0 M      &kp LC(V)  &to_layer_0 PERIOD  &trans
&kp LCTRL           &trans         &trans         &trans         &trans         &trans      &trans         &trans                                                           &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans           &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &kp LA(TAB)      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans           &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
